def determineLinearFunction (listX, listY):

  for i=0 in (listX.len - 1):
    row = listX[i]
 
    carry = row.pop

    row.push(1)

    row.push(carry)
   
    listX[i] = row

  xtransx = (listX^T) M* listX
  xtransxinv = xtransx.inv

  xtrans = listX^T
  altUndtagenY = xtransxinv M* xtrans

  result = altUndtagenY M* listY

  return result


def predict(linearResult,x):
  return (x * linearResult[1][0] + linearResult[0][0])

# Mangler funktionalitet til nogle af udregningerne 

def detailsOfLinRegModel (listX, listY):

  linearResults = determineLinearFunction(listX, listY)
  print("Linear equation: y = ", linearResults[1][0], "x + ", linearResults[0][0])

  print("Number of data pairs: Work in progress")

  print("R Squared: Work in progress")

  print("Sy.x: Work in progress")